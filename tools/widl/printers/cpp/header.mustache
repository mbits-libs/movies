// Copyright (c) 2023 midnightBITS
// This code is licensed under MIT license (see LICENSE for details)

// THIS FILE IS AUTOGENERATED. DO NOT MODIFY

#pragma once

{{# includes}}
#include {{includes}}
{{/ includes}}
{{? includes}}

{{/ includes}}
namespace movies::v{{version}} {
	static constexpr auto VERSION = {{version}}u;
{{# enums}}

{{text}}

	enum class {{name}} {
#define X_DECL_TYPE(NAME) NAME,
		{{NAME}}_X(X_DECL_TYPE)
#undef X_DECL_TYPE
	};
{{/ enums}}
{{? interfaces}}

{{/ interfaces}}
{{# interfaces}}
	struct {{name}};
{{/ interfaces}}
{{# interfaces}}

	struct {{name}} {{#inheritance}}: {{inheritance}} {{/inheritance}}{
{{#ext_attrs}}
{{#cpp_quote}}
		{{cpp_quote}}

{{/cpp_quote}}
{{/ext_attrs}}
{{#attributes}}
{{? guards}}
#if {{#guards}}defined({{guards}}){{/guards}}

{{/guards}}
		{{type}} {{name}}{{default}};
{{? guards}}
#endif
{{/guards}}
{{/attributes}}
{{? attributes}}
{{? operations}}

{{/operations}}
{{/attributes}}
{{#operations}}
{{#ext_attrs}}
{{? guards}}
#if {{#guards}}defined({{guards}}){{/guards}}

{{/guards}}
{{/ext_attrs}}
		{{? ext_attrs.static}}static {{/ext_attrs.static}}{{type}} {{\}}
		{{name}}({{\}}
			{{#args}}{{type}}{{\}}
			{{?ext_attrs.out}}&{{/ext_attrs.out}}{{\}}
			{{^ext_attrs.out}}{{?ext_attrs.in}} const&{{/ext_attrs.in}}{{/ext_attrs.out}} {{\}}
			{{name}}{{#ext_attrs}}{{#defaulted}} = {}{{/defaulted}}{{/ext_attrs}}{{\}}
			{{? comma}}, {{/comma}}{{/args}}{{\}}
		){{^ext_attrs.mutable}}{{^ ext_attrs.static}} const{{/ext_attrs.static}}{{/ext_attrs.mutable}}{{\}}
		{{^ext_attrs.throws}} noexcept{{/ext_attrs.throws}}{{\}}
		{{?ext_attrs.defaulted}} = default{{/ext_attrs.defaulted}}{{\}}
		;
{{#ext_attrs}}
{{? guards}}
#endif
{{/guards}}
{{/ext_attrs}}
{{/operations}}
	};
{{/ interfaces}}
} // namespace movies::v{{version}}

namespace movies {
  using namespace v{{version}};
}  // namespace movies

#define MOVIES_CURR v{{version}}
