// Copyright (c) 2023 midnightBITS
// This code is licensed under MIT license (see LICENSE for details)

// THIS FILE IS AUTOGENERATED. DO NOT MODIFY

#include <movies/movie_info.hpp>
#include <py3/converter.hpp>
#include <boost/python/self.hpp>
#include <boost/python/operators.hpp>

namespace movies::v{{version}} {
	json::node simpler(json::node simpler, int level = 2);
{{#interfaces}}
{{#operations}}
{{#external}}
{{#needs_proxy}}

	{{alias}} proxy__{{#staticmethod}}static__{{/staticmethod}}{{interfaces.name}}__{{name}}({{\}}
{{#arguments}}{{\}}
{{#this}}{{interfaces.name}}{{^ext_attrs.mutable}} const{{/ext_attrs.mutable}}&{{/this}}{{\}}
{{^this}}{{alias}}{{/this}} {{name}}{{^last}}, {{/last}}{{/arguments}}{{\}}
	) {
		return {{#staticmethod}}{{interfaces.name}}::{{/staticmethod}}{{\}}
		{{^staticmethod}}{{#arguments}}{{#this}}{{name}}.{{/this}}{{/arguments}}{{/staticmethod}}{{\}}
		{{name}}({{#arguments}}{{^this}}{{name}}{{^last}}, {{/last}}{{/this}}{{/arguments}});
	}
{{/needs_proxy}}
{{/external}}
{{/operations}}
{{/interfaces}}
{{#interfaces}}
{{^synthetic}}
{{#has_to_string}}

	std::string internal__{{name}}__to_string({{name}} const& self) {
		auto node = simpler(self.to_json());
		std::u8string u8{};
		json::write_json(u8, node, json::concise);
		return as_ascii_string_v(u8);
	}
{{/has_to_string}}

	{{name}} internal__{{name}}__clone({{name}} const& self) { return self; }
{{/synthetic}}
{{/interfaces}}
}  // namespace movies::v{{version}}
